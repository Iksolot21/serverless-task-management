version: "3.8"
services:
  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    ports:
      - "50051:50051"
    env_file:
      - .env
    networks:
      - app-network
    depends_on:
        - postgres
  task-service:
    build:
      context: .
      dockerfile: task-service/Dockerfile
    ports:
      - "50052:50052"
    env_file:
      - .env
    networks:
        - app-network
    depends_on:
      - postgres
  user-service:
    build:
        context: .
        dockerfile: user-service/Dockerfile
    ports:
       - "50053:50053"
    env_file:
        - .env
    networks:
      - app-network
    depends_on:
        - postgres
  notification-service:
    build:
      context: .
      dockerfile: notification-service/Dockerfile
    ports:
       - "50054:50054"
    env_file:
      - .env
    networks:
      - app-network
  gateway-service:
    build:
      context: .
      dockerfile: gateway-service/Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - .env
    networks:
      - app-network
    depends_on:
      - auth-service
      - task-service
      - user-service
      - notification-service
  postgres:
        image: postgres:16
        ports:
           - "5432:5432"
        environment:
          POSTGRES_USER: ${DB_USER}
          POSTGRES_PASSWORD: ${DB_PASSWORD}
          POSTGRES_DB: ${DB_NAME}
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - app-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
        - "5672:5672"
        - "15672:15672"
    networks:
        - app-network


networks:
  app-network:
      driver: bridge

volumes:
  postgres_data: